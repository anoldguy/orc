#!/usr/bin/env bash
# Usage: orc example
# Summary: Shows example nginx config
# Help: Displays an example nginx config that will read apps out
# of the $ORC_APPS directory

cat << 'EOF'
  Use the following nginx config if you do not mind blowing away your
  default config:

server {
  listen 80;
  listen 127.0.0.1:80;
  server_name ~^(.*\.)?(.*)\.(dev|test);
  set $app_dir $2;
  root /home/<your username>/.apps/$app_dir/current/public;


  error_page 404 /404.html;
  error_page 502 503 504 /500.html;

  location / {
    try_files $uri/index.html $uri $uri.html @unicorn;
  }

  location @unicorn {
    default_type text/html;
    proxy_pass http://unix:/tmp/unicorn.$app_dir.sock;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Queue-Start "${msec}";
  }
}

Also, install dnsmasq and run this to redirect *.dev to localhost:

  echo "address=/.dev/127.0.0.1" > /etc/dnsmasq.d/orc

EOF
