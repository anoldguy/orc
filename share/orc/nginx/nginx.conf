
worker_processes  2;

error_log  /usr/local/openresty/nginx/logs/error.log debug;
pid        /usr/local/openresty/nginx/logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
  access_log /usr/local/openresty/nginx/logs/access.log;
  server {
    listen       80;
    server_name  localhost;

    location / {
      set $proxy_to "";
      set $proxy_host "";
      access_by_lua_file /etc/nginx/pow.lua;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $proxy_host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_pass http://$proxy_to$request_uri;
    }
    location /restart {
        access_by_lua_block {
            local host_mapping = ngx.shared.host_mapping
            host_mapping:flush_all()
            ngx.say("Flushed; will reload on next request!")
        }
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/local/openresty/nginx/html;
    }
  }

  # Handle HTTPS requests to *.devel
  server {
    listen       443 ssl;

    ssl on;
    ssl_certificate     /etc/nginx/ssl/test.pem;
    ssl_certificate_key /etc/nginx/ssl/test.key;
    ssl_session_timeout 5m;

    location / {
      set $proxy_to "";
      set $proxy_host "";
      access_by_lua_file /etc/nginx/pow.lua;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $proxy_host;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_pass http://$proxy_to$request_uri;
    }
    location /restart {
        access_by_lua_block {
            local host_mapping = ngx.shared.host_mapping
            host_mapping:flush_all()
            ngx.say("Flushed; will reload on next request!")
        }
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      root   /usr/local/openresty/nginx/html;
    }
  }
  lua_shared_dict host_mapping 1m;
}
